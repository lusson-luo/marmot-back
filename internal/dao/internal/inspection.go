// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// InspectionDao is the data access object for table inspection.
type InspectionDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns InspectionColumns // columns contains all the column names of Table for convenient usage.
}

// InspectionColumns defines and stores column names for table inspection.
type InspectionColumns struct {
	Id           string //
	Name         string //
	Count        string //
	SuccessCount string //
	FailedCount  string //
	Connection   string //
	Availability string //
	StartTime    string //
	EndTime      string //
}

// inspectionColumns holds the columns for table inspection.
var inspectionColumns = InspectionColumns{
	Id:           "id",
	Name:         "name",
	Count:        "count",
	SuccessCount: "success_count",
	FailedCount:  "failed_count",
	Connection:   "connection",
	Availability: "availability",
	StartTime:    "start_time",
	EndTime:      "end_time",
}

// NewInspectionDao creates and returns a new DAO object for table data access.
func NewInspectionDao() *InspectionDao {
	return &InspectionDao{
		group:   "default",
		table:   "inspection",
		columns: inspectionColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *InspectionDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *InspectionDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *InspectionDao) Columns() InspectionColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *InspectionDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *InspectionDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *InspectionDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
